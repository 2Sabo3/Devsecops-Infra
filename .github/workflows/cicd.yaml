name: CICD Pipeline

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - 'kubernetes/deployment.yaml'
  pull_request:
    branches: [ "main" ]

jobs:
  security-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test || echo "No tests found, would add tests in a real project"

      - name: Run ESLint
        run: npm run lint

      - name: Build the Docker image
        run: |
          docker build . --file Dockerfile --tag starbucks:latest
          docker images

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: starbucks:latest
          format: 'table'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

  build-docker-image:
    name: Docker Build and Push
    runs-on: ubuntu-latest
    outputs:
        ecr_registry: ${{ steps.login-ecr.outputs.registry }}
    needs: [security-checks]  # This job runs after the security-checks job.
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and tag Docker image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: starbucks
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG . --file Dockerfile
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  update-k8s:
    name: Update Kubernetes Deployment
    runs-on: ubuntu-22.04
    needs: [build-docker-image]  # This job runs after the build-docker-image job.
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.TOKEN }}

      - name: Setup Git Config
        run: |
          git config user.name "Github Actions"
          git config user.email "actions@github.com"

      - name: Update the Kubernetes File
        env:
          ECR_REGISTRY: ${{ needs.build-docker-image.outputs.ecr_registry }}
          ECR_REPOSITORY: starbucks
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Define the new image with tag
          NEW_IMAGE="${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}"

          # Update the deployment file directly
          sed -i "s|image: ${ECR_REGISTRY}/.*|image: ${NEW_IMAGE}|g" kubernetes/deployment.yaml
          cat kubernetes/deployment.yaml
          # Verify the change
          echo "Updated deployment to use image: ${NEW_IMAGE}"
          grep -A 1 "image:" kubernetes/deployment.yaml

      - name: Commit and push changes
        run: |
          git add kubernetes/deployment.yaml
          git commit -m "Update Kubernetes deployment with new image tag [skip ci]" || echo "No changes to commit"
          git push